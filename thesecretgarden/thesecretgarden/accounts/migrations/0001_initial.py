# Generated by Django 5.1.2 on 2024-12-08 16:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import thesecretgarden.accounts.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.MinLengthValidator(3), thesecretgarden.accounts.validators.UsernameValidator()], verbose_name='Username')),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('role', models.CharField(choices=[('customer', 'Customer'), ('staff', 'Staff'), ('admin', 'Admin')], default='customer', max_length=10, verbose_name='Role')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=30, validators=[thesecretgarden.accounts.validators.NameValidator(field_name='first name'), django.core.validators.MinLengthValidator(3)], verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, validators=[thesecretgarden.accounts.validators.NameValidator(field_name='last name'), django.core.validators.MinLengthValidator(3)], verbose_name='Last Name')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_flower_type', models.CharField(blank=True, choices=[('non-floral', 'Non Floral Plants'), ('floral', 'Floral Plants'), ('cactus', 'Cactuses')], max_length=10, null=True, verbose_name='Preferred Flower Type')),
                ('address', models.TextField(blank=True, help_text='Enter delivery address for home deliveries.', null=True, validators=[thesecretgarden.accounts.validators.AddressValidator()], verbose_name='Address')),
                ('phone', models.CharField(blank=True, help_text='Enter a valid phone number.', max_length=10, null=True, validators=[thesecretgarden.accounts.validators.PhoneNumberValidator()], verbose_name='Phone Number')),
                ('birthday', models.DateField(blank=True, help_text='Optional. Enter your birthdate for promotions.', null=True, validators=[thesecretgarden.accounts.validators.BirthdayValidator(min_year=1900)], verbose_name='Date of Birth')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Profile',
                'ordering': ['user'],
            },
        ),
    ]
