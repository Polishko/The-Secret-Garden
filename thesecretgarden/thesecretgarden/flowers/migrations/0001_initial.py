# Generated by Django 5.1.2 on 2024-11-29 17:05

import cloudinary.models
import django.core.validators
import thesecretgarden.common.validators
import thesecretgarden.flowers.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter product name (up to 3 words).', max_length=50, unique=True, validators=[thesecretgarden.common.validators.ProductNameValidator()], verbose_name='Product Name')),
                ('slug', models.SlugField(editable=False, unique=True, verbose_name='Slug')),
                ('price', models.DecimalField(decimal_places=2, help_text='Provide product price.', max_digits=5, validators=[thesecretgarden.common.validators.ProductPriceValidator()], verbose_name='Price')),
                ('stock', models.PositiveIntegerField(help_text='Provide stock amount.', validators=[thesecretgarden.common.validators.ProductStockValidator()], verbose_name='Stock')),
                ('photo', cloudinary.models.CloudinaryField(help_text='Upload an image for the product.', max_length=255, verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('non-floral', 'Non Floral Plants'), ('floral', 'Floral Plants'), ('cactus', 'Cactus')], default='floral', help_text='Provide plant type.', max_length=10, verbose_name='Type')),
                ('description', models.TextField(help_text='Provide a description for the plant product.', validators=[thesecretgarden.flowers.validators.PlantDescriptionValidator(), django.core.validators.MinLengthValidator(10, message='Description should be at least 10 characters.'), django.core.validators.MaxLengthValidator(300, message='Description should not exceed 1000 characters.')], verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Plant',
            },
        ),
    ]
